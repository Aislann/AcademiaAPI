// <auto-generated />
using System;
using Academia_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Academia_API.Migrations
{
    [DbContext(typeof(aislan_fitContext))]
    [Migration("20240223001515_tst")]
    partial class tst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Academia_API.Models.Aluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAluno"), 1L, 1);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<string>("Genero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("genero");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("IdAluno")
                        .HasName("PK__Aluno__8D231D091D250E59");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("Academia_API.Models.Aula", b =>
                {
                    b.Property<int>("IdAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_aula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAula"), 1L, 1);

                    b.Property<int?>("CapacidadeMaxima")
                        .HasColumnType("int")
                        .HasColumnName("capacidade_maxima");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<TimeSpan?>("Horario")
                        .HasColumnType("time")
                        .HasColumnName("horario");

                    b.Property<int?>("IdInstrutor")
                        .HasColumnType("int")
                        .HasColumnName("id_instrutor");

                    b.Property<string>("NomeAula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_aula");

                    b.HasKey("IdAula")
                        .HasName("PK__Aula__B19134FE580EC32D");

                    b.HasIndex("IdInstrutor");

                    b.ToTable("Aula", (string)null);
                });

            modelBuilder.Entity("Academia_API.Models.Instrutor", b =>
                {
                    b.Property<int>("IdInstrutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_instrutor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInstrutor"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Especialidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("especialidade");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("IdInstrutor")
                        .HasName("PK__Instruto__D670DEA1DD0029F3");

                    b.ToTable("Instrutor", (string)null);
                });

            modelBuilder.Entity("Academia_API.Models.Matricula", b =>
                {
                    b.Property<int>("IdMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_matricula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMatricula"), 1L, 1);

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("data_inicio");

                    b.Property<int?>("IdAluno")
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    b.Property<string>("PlanoTreinamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plano_treinamento");

                    b.Property<string>("StatusMatricula")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_matricula");

                    b.HasKey("IdMatricula")
                        .HasName("PK__Matricul__1D7CF00B6D847D8B");

                    b.HasIndex("IdAluno");

                    b.ToTable("Matricula", (string)null);
                });

            modelBuilder.Entity("Academia_API.Models.Presenca", b =>
                {
                    b.Property<int>("IdPresenca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_presenca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresenca"), 1L, 1);

                    b.Property<DateTime?>("DataAula")
                        .HasColumnType("date")
                        .HasColumnName("data_aula");

                    b.Property<TimeSpan?>("Horario")
                        .HasColumnType("time")
                        .HasColumnName("horario");

                    b.Property<int?>("IdAluno")
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    b.Property<int?>("IdAula")
                        .HasColumnType("int")
                        .HasColumnName("id_aula");

                    b.HasKey("IdPresenca")
                        .HasName("PK__Presenca__F3BA19A7289CA42F");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdAula");

                    b.ToTable("Presenca", (string)null);
                });

            modelBuilder.Entity("Academia_API.Models.Aula", b =>
                {
                    b.HasOne("Academia_API.Models.Instrutor", "IdInstrutorNavigation")
                        .WithMany("Aulas")
                        .HasForeignKey("IdInstrutor")
                        .HasConstraintName("FK__Aula__id_instrut__38996AB5");

                    b.Navigation("IdInstrutorNavigation");
                });

            modelBuilder.Entity("Academia_API.Models.Matricula", b =>
                {
                    b.HasOne("Academia_API.Models.Aluno", "IdAlunoNavigation")
                        .WithMany("Matriculas")
                        .HasForeignKey("IdAluno")
                        .HasConstraintName("FK__Matricula__id_al__403A8C7D");

                    b.Navigation("IdAlunoNavigation");
                });

            modelBuilder.Entity("Academia_API.Models.Presenca", b =>
                {
                    b.HasOne("Academia_API.Models.Aluno", "IdAlunoNavigation")
                        .WithMany("Presencas")
                        .HasForeignKey("IdAluno")
                        .HasConstraintName("FK__Presenca__id_alu__44FF419A");

                    b.HasOne("Academia_API.Models.Aula", "IdAulaNavigation")
                        .WithMany("Presencas")
                        .HasForeignKey("IdAula")
                        .HasConstraintName("FK__Presenca__id_aul__45F365D3");

                    b.Navigation("IdAlunoNavigation");

                    b.Navigation("IdAulaNavigation");
                });

            modelBuilder.Entity("Academia_API.Models.Aluno", b =>
                {
                    b.Navigation("Matriculas");

                    b.Navigation("Presencas");
                });

            modelBuilder.Entity("Academia_API.Models.Aula", b =>
                {
                    b.Navigation("Presencas");
                });

            modelBuilder.Entity("Academia_API.Models.Instrutor", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
